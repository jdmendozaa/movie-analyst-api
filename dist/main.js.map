{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server.js","webpack:///external \"express\"","webpack:///external \"mysql\"","webpack:///external \"os\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA,cAAc,mBAAO,CAAC,wBAAS;AAC/B;AACA,YAAY,mBAAO,CAAC,oBAAO;AAC3B,SAAS,mBAAO,CAAC,cAAI;AACrB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA,oCAAoC;AACpC,aAAa;AACb;AACA,yCAAyC;AACzC,KAAK;AACL,GAAG,EAAE;AACL;AACA;AACA;AACA,iDAAiD;AACjD,yBAAyB;AACzB,KAAK,OAAO;AACZ,gBAAgB;AAChB;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,+CAA+C;AAC/C,uBAAuB;AACvB,GAAG,OAAO;AACV,cAAc;AACd;AACA,CAAC;;AAED,8B;AACA;AACA;AACA,mC;AACA,Y;AACA,S;AACA,C;;AAEA,iC;AACA;AACA;AACA,8B;AACA,O;AACA,I;AACA,C;;AAEA,oC;AACA;AACA;AACA,8B;AACA,O;AACA,I;AACA,C;;AAEA,gC;AACA;AACA;AACA,8B;AACA,O;AACA,I;AACA,C;;AAEA;AACA;AACA,mBAAmB,mBAAmB,GAAG,aAAa;AACtD;AACA,CAAC;;AAED,6C;AACA;AACA;AACA,sD;AACA,OAAO;AACP;AACA;AACA,IAAI;AACJ,CAAC;;;AAGD,gD;AACA;AACA;AACA,oD;AACA,KAAK;AACL;AACA;AACA,EAAE;AACF,CAAC;;;;AAID,mD;AACA;AACA;AACA,oD;AACA,KAAK;AACL;AACA;AACA,EAAE;AACF,CAAC;;AAED,8C;;AAEA;;AAEA;AACA,oD;AACA,KAAK;AACL;AACA;AACA,EAAE;AACF,CAAC;;AAED,yC;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;;;;;;;;;;;AC7KA,oC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,+B","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server.js\");\n","'use strict';\r\n\r\n// Get our dependencies\r\nvar express = require('express');\r\nvar app = express();\r\nvar mysql = require(\"mysql\");\r\nvar os = require('os');\r\nvar ifaces = os.networkInterfaces();\r\n\r\n\r\nvar db_config = {\r\n  host     : process.env.DB_HOST,\r\n  user     : process.env.DB_USER,\r\n  password : process.env.DB_PASS,\r\n  database : process.env.DB_NAME,\r\n \r\n };\r\n\r\nvar connection;\r\n\r\nfunction getIpAdresses(){\r\n\r\n  var ipAdresses= \"\";\r\n  Object.keys(ifaces).forEach(function (ifname) {\r\n    var alias = 0;\r\n  \r\n    ifaces[ifname].forEach(function (iface) {\r\n      if ('IPv4' !== iface.family || iface.internal !== false) {\r\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\r\n        return;\r\n      }\r\n  \r\n      if (alias >= 1) {\r\n        // this single interface has multiple ipv4 addresses\r\n        ipAdresses += ifname + ': ' + alias, iface.address ;\r\n      } else {\r\n        // this interface has only one ipv4 adress\r\n        ipAdresses += ifname+ ': ' + iface.address;\r\n  \r\n      }\r\n      ++alias;\r\n    });\r\n    \r\n  });\r\n  \r\n  return ipAdresses;\r\n};\r\n\r\nfunction handleDisconnect() {\r\n  connection = mysql.createConnection(db_config); // Recreate the connection, since\r\n                                                  // the old one cannot be reused.\r\n\r\n  connection.connect(function(err) {              // The server is either down\r\n    if(err) {                                     // or restarting (takes a while sometimes).\r\n      console.log('error when connecting to db:', err);\r\n      setTimeout(handleDisconnect, 2000); // We introduce a delay before attempting to reconnect,\r\n    }                                     // to avoid a hot loop, and to allow our node script to\r\n  });                                     // process asynchronous requests in the meantime.\r\n                                          // If you're also serving http, display a 503 error.\r\n  connection.on('error', function(err) {\r\n    console.log('db error', err);\r\n    if(err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually\r\n      handleDisconnect();                         // lost due to either server restart, or a\r\n    } else {                                      // connnection idle timeout (the wait_timeout\r\n      throw err;                                  // server variable configures this)\r\n    }\r\n  });\r\n}\r\n\r\nhandleDisconnect();\r\n\r\nconnection.on('error', function(err) {\r\n  console.log('db error', err);\r\n  if(err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually\r\n    handleDisconnect();                         // lost due to either server restart, or a\r\n  } else {                                      // connnection idle timeout (the wait_timeout\r\n    throw err;                                  // server variable configures this)\r\n  }\r\n});\r\n\r\nfunction getMovies(callback) {    \r\n       connection.query(\"SELECT * FROM movie_db.moviereview\",\r\n           function (err, rows) {\r\n               callback(err, rows); \r\n           } \r\n       );    \r\n} \r\n\r\nfunction getReviewers(callback) {    \r\n  connection.query(\"SELECT * FROM movie_db.reviewer\",\r\n      function (err, rows) {\r\n          callback(err, rows); \r\n      } \r\n  );    \r\n} \r\n\r\nfunction getPublications(callback) {    \r\n  connection.query(\"SELECT * FROM movie_db.publication\",\r\n      function (err, rows) {\r\n          callback(err, rows); \r\n      } \r\n  );    \r\n} \r\n\r\nfunction getPendings(callback) {    \r\n  connection.query(\"SELECT * FROM movie_db.pending\",\r\n      function (err, rows) {\r\n          callback(err, rows); \r\n      } \r\n  );    \r\n} \r\n\r\n//Testing endpoint\r\napp.get('/', function(req, res){\r\n  var response = [{response : 'hello'}, {code : '200'}]\r\n  res.json(response);\r\n})\r\n\r\napp.get('/movies', function(req, res, next) {   \r\n   getMovies(function (err, moviesResult){\r\n      if(err){\r\n        res.status(500).send('Error in the database');   \r\n      }else{\r\n        res.json(moviesResult);\r\n      }\r\n   });\r\n});\r\n\r\n\r\napp.get('/reviewers', function(req, res, next) {   \r\n  getReviewers(function (err, reviewersResult){\r\n    if(err){\r\n      res.status(500).send('Error in the database');   \r\n    }else{\r\n      res.json(reviewersResult);\r\n    }\r\n });\r\n});\r\n\r\n\r\n\r\napp.get('/publications', function(req, res, next) {   \r\n  getPublications(function (err, publicationsResult){\r\n    if(err){\r\n      res.status(500).send('Error in the database');   \r\n    }else{\r\n      res.json(publicationsResult);\r\n    }\r\n });\r\n});\r\n\r\napp.get('/pending', function(req, res, next) {   \r\n  \r\n  getPendings(function (err, pendingResult){\r\n    \r\n    if(err){\r\n      res.status(500).send('Error in the database');   \r\n    }else{\r\n      res.json(pendingResult);\r\n    }\r\n });\r\n});\r\n\r\napp.get('/ip', function(req, res, next) {   \r\n  \r\n  var ip = getIpAdresses();\r\n  res.json(ip);\r\n});\r\n\r\n\r\nconsole.log(\"server listening through port: \" + process.env.PORT);\r\n// Launch our API Server and have it listen on specified port .\r\napp.listen(process.env.PORT);\r\nmodule.exports = app;\r\n","module.exports = require(\"express\");","module.exports = require(\"mysql\");","module.exports = require(\"os\");"],"sourceRoot":""}